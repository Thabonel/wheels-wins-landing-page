# Render Configuration with Edge Caching
# Enhanced configuration for Wheels & Wins with CDN edge caching

services:
  # Main backend service with edge caching
  - name: pam-backend
    type: web
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: .
    plan: free # Upgrade to 'starter' or 'standard' for production
    autoDeploy: true
    healthCheckPath: /health
    
    # Environment variables
    envVars:
      - fromGroup: wheels-env
      # Cache-specific environment variables
      - key: EDGE_CACHE_ENABLED
        value: "true"
      - key: CACHE_DEFAULT_TTL
        value: "3600"
      - key: PAM_RESPONSE_CACHE
        value: "true"
      - key: CDN_ENABLED
        value: "true"
      - key: ENABLE_METRICS
        value: "true"
    
    # CDN and caching headers configuration
    headers:
      # Security headers
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-XSS-Protection
        value: 1; mode=block
      
      # Static assets - aggressive caching (30 days)
      - path: /static/*
        name: Cache-Control
        value: public, max-age=2592000, immutable
      - path: /assets/*
        name: Cache-Control
        value: public, max-age=2592000, immutable
      - path: /fonts/*
        name: Cache-Control
        value: public, max-age=2592000, immutable
      
      # Images and media - moderate caching (7 days)
      - path: /images/*
        name: Cache-Control
        value: public, max-age=604800, stale-while-revalidate=86400
      - path: /media/*
        name: Cache-Control
        value: public, max-age=604800, stale-while-revalidate=86400
      
      # Weather API - short cache (10 minutes)
      - path: /api/v1/weather/*
        name: Cache-Control
        value: public, max-age=600, stale-while-revalidate=60, stale-if-error=300
      - path: /api/v1/weather/*
        name: Vary
        value: Accept-Encoding, Accept-Language
      
      # Location APIs - medium cache (30 minutes)
      - path: /api/v1/locations/*
        name: Cache-Control
        value: public, max-age=1800, stale-while-revalidate=300
      - path: /api/v1/places/*
        name: Cache-Control
        value: public, max-age=1800, stale-while-revalidate=300
      
      # Trip templates - long cache (6 hours)
      - path: /api/v1/trips/templates/*
        name: Cache-Control
        value: public, max-age=21600, stale-while-revalidate=3600
      - path: /api/v1/trips/popular/*
        name: Cache-Control
        value: public, max-age=21600, stale-while-revalidate=3600
      
      # PAM common responses - medium cache (1 hour)
      - path: /api/v1/pam/common/*
        name: Cache-Control
        value: public, max-age=3600, stale-while-revalidate=600
      - path: /api/v1/pam/help
        name: Cache-Control
        value: public, max-age=3600, stale-while-revalidate=600
      - path: /api/v1/pam/greetings
        name: Cache-Control
        value: public, max-age=86400, immutable
      
      # Community content - short cache (5 minutes)
      - path: /api/v1/community/trending
        name: Cache-Control
        value: public, max-age=300, stale-while-revalidate=60
      - path: /api/v1/community/featured
        name: Cache-Control
        value: public, max-age=300, stale-while-revalidate=60
      
      # Tips and recommendations - medium cache (15 minutes)
      - path: /api/v1/tips/*
        name: Cache-Control
        value: public, max-age=900, stale-while-revalidate=120
      - path: /api/v1/shop/featured
        name: Cache-Control
        value: public, max-age=900, stale-while-revalidate=120
      
      # Authentication - never cache
      - path: /api/v1/auth/*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
      - path: /api/v1/login
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
      - path: /api/v1/logout
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
      
      # User-specific data - private cache only
      - path: /api/v1/users/*
        name: Cache-Control
        value: private, no-cache, no-store, must-revalidate
      - path: /api/v1/profile/*
        name: Cache-Control
        value: private, no-cache, no-store, must-revalidate
      - path: /api/v1/settings/*
        name: Cache-Control
        value: private, no-cache, no-store, must-revalidate
      - path: /api/v1/expenses/*
        name: Cache-Control
        value: private, no-cache, no-store, must-revalidate
      - path: /api/v1/income/*
        name: Cache-Control
        value: private, no-cache, no-store, must-revalidate
      
      # WebSocket and real-time - no cache
      - path: /api/v1/pam/ws/*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
      - path: /api/v1/chat/*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
      - path: /api/v1/notifications/*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
      
      # CORS headers for API
      - path: /api/*
        name: Access-Control-Allow-Origin
        value: "*" # Update with your specific domain in production
      - path: /api/*
        name: Access-Control-Allow-Methods
        value: GET, POST, PUT, DELETE, OPTIONS, PATCH
      - path: /api/*
        name: Access-Control-Allow-Headers
        value: Content-Type, Authorization, X-Requested-With
      - path: /api/*
        name: Access-Control-Max-Age
        value: "86400"
      
      # Cache tags for targeted purging
      - path: /api/v1/weather/*
        name: X-Cache-Tag
        value: weather
      - path: /api/v1/locations/*
        name: X-Cache-Tag
        value: locations
      - path: /api/v1/trips/*
        name: X-Cache-Tag
        value: trips
      - path: /api/v1/pam/*
        name: X-Cache-Tag
        value: pam
      - path: /api/v1/community/*
        name: X-Cache-Tag
        value: community
  
  # Celery worker service (no caching needed)
  - name: pam-celery
    type: worker
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: .
    plan: free
    autoDeploy: true
    startCommand: celery -A app.workers.celery worker --loglevel=INFO
    envVars:
      - fromGroup: wheels-env

# Environment variable groups (configure in Render dashboard)
# envVarGroups:
#   - name: wheels-env
#     envVars:
#       - key: SUPABASE_URL
#         value: your-supabase-url
#       - key: SUPABASE_SERVICE_ROLE_KEY
#         value: your-service-role-key
#       - key: OPENAI_API_KEY
#         value: your-openai-api-key
#       - key: REDIS_URL
#         value: redis://red-xxxxx:6379
#       - key: MAPBOX_SECRET_TOKEN
#         value: sk.your-mapbox-token
#       - key: SENTRY_DSN
#         value: your-sentry-dsn

# Notes for production deployment:
# 1. Upgrade plan from 'free' to 'starter' or 'standard' for better performance
# 2. Enable Render CDN in the dashboard for edge caching
# 3. Configure custom domain with SSL certificate
# 4. Set up monitoring and alerts for cache hit rates
# 5. Configure Redis for distributed caching
# 6. Implement cache warming strategies for critical endpoints
# 7. Set up cache purging webhooks for content updates