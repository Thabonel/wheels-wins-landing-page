
# Docker Compose override for development environment
version: '3.8'

services:
  # Development Backend with hot reload
  backend:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    ports:
      - "8000:8000"
      - "5678:5678"  # debugpy port
    command: >
      sh -c "
        pip install debugpy &&
        python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Development Celery Worker with auto-reload
  celery_worker:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - .:/app
      - /app/__pycache__
    command: watchmedo auto-restart --directory=./app --pattern=*.py --recursive -- celery -A app.workers.celery worker --loglevel=debug --concurrency=1

  # Development Celery Beat
  celery_beat:
    build:
      target: development
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - .:/app
      - /app/__pycache__
    command: celery -A app.workers.celery beat --loglevel=debug

  # PostgreSQL with exposed port for development
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: pam_backend_dev
      POSTGRES_USER: pam_dev_user
      POSTGRES_PASSWORD: pam_dev_password

  # Redis with exposed port for development
  redis:
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes  # No password in dev

  # Development tools container
  dev_tools:
    build:
      context: .
      target: development
    container_name: pam_dev_tools
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://pam_dev_user:pam_dev_password@postgres:5432/pam_backend_dev
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - tools
    networks:
      - pam_network
    command: tail -f /dev/null  # Keep container running

  # Remove nginx in development
  nginx:
    profiles:
      - production
