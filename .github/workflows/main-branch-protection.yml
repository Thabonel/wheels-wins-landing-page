name: 🛡️ Main Branch Protection

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  validate-main-deployment:
    name: 🔍 Validate Main Branch Deployment
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Validate PUSH_TO_MAIN.md compliance
        run: npm run validate:main
        
      - name: 🏗️ Test production build
        run: npm run build
        env:
          # Ensure we're using production URLs
          VITE_API_URL: https://pam-backend.onrender.com
          VITE_BACKEND_URL: https://pam-backend.onrender.com
          
      - name: 🧪 Run quality checks
        run: npm run quality:check:full
        
      - name: 🔍 Search for staging URLs (should fail if found)
        run: |
          echo "🔍 Searching for staging URLs that should not be in main..."
          
          # This should return empty (exit 0) or the job will fail
          if grep -r "wheels-wins-backend-staging" src/services/ 2>/dev/null; then
            echo "❌ ERROR: Found staging backend URLs in src/services/"
            echo "📚 Please follow PUSH_TO_MAIN.md checklist"
            exit 1
          fi
          
          if grep -r "wheels-wins-staging.netlify.app" src/services/ 2>/dev/null; then
            echo "❌ ERROR: Found staging frontend URLs in src/services/"
            echo "📚 Please follow PUSH_TO_MAIN.md checklist"
            exit 1
          fi
          
          echo "✅ No staging URLs found - safe for production"
          
      - name: 📋 Verify API_BASE_URL configuration
        run: |
          echo "🔍 Checking API_BASE_URL configuration..."
          
          # Check that api.ts has correct production URL
          if grep -A5 -B5 "API_BASE_URL" src/services/api.ts | grep -q "getApiBaseUrl\|currentDomain\|staging.*netlify"; then
            echo "❌ ERROR: API_BASE_URL uses domain detection (not allowed in main)"
            echo "📚 Please follow PUSH_TO_MAIN.md checklist"
            exit 1
          fi
          
          if grep -A3 "API_BASE_URL.*=" src/services/api.ts | grep -q "pam-backend.onrender.com"; then
            echo "✅ API_BASE_URL correctly set to production"
          else
            echo "❌ ERROR: API_BASE_URL not set to production backend"
            echo "📚 Please follow PUSH_TO_MAIN.md checklist"
            exit 1
          fi
          
      - name: 🎯 Production URL verification
        run: |
          echo "🎯 Final verification of production URLs..."
          echo ""
          echo "✅ Expected configuration for main branch:"
          echo "   - API_BASE_URL: https://pam-backend.onrender.com"
          echo "   - No domain detection logic"
          echo "   - No staging URLs"
          echo "   - Production backend prioritized first"
          echo ""
          echo "🚀 Main branch validation complete!"

  post-validation-reminder:
    name: 📋 Post-Validation Reminder
    runs-on: ubuntu-latest
    needs: validate-main-deployment
    if: success()
    
    steps:
      - name: 🎉 Validation Success
        run: |
          echo "🎉 All validations passed!"
          echo ""
          echo "📋 Remember to verify after deployment:"
          echo "   □ https://wheelsandwins.com loads without errors"
          echo "   □ PAM connects to production backend"
          echo "   □ No CORS errors in browser console"
          echo "   □ Authentication works"
          echo "   □ Voice functionality works"
          echo ""
          echo "🚀 Safe to deploy to production!"