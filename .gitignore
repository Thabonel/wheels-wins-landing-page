node_modules/
dist/
build/
.git.corrupted.backup/
*.log
.DS_Store
__pycache__/
*.pyc
.pytest_cache/
coverage/
.env
.env.local
.env.production
.env.staging
.env.ai-agents.local

# Package lock files (prevent accidental dependency updates)
package-lock.json
yarn.lock

# Git Safety Systems - Generated Files (DO NOT COMMIT)
.git/git-safe/
.git/git-network-resilient/
.git/git-health-monitor/
.git/git-script-auditor/
*.git-safe.backup
REPO_HEALTH_CHECK.md
scripts/git-safe-config
git-safety-functions.sh

# ðŸ”’ Security & Secrets Prevention (DO NOT COMMIT)
# Environment files with potential secrets
*.env*
.env
.env.*
.environment
*.secrets
*secret.*
*secret_*
*_secret*
*credential*
*password*
*private*

# Exception: Allow documentation files
!*PREVENTION*

# API Keys and tokens
*api-key*
*api_key*
*apikey*
*access-token*
*access_token*
*auth-token*
*auth_token*
*.pem
*.key
*.p12
*.pfx
*.jks
*.keystore

# Database and service credentials
database.yml
config/database.yml
*connection-string*
*database-url*
*db-url*
*db_url*

# Cloud provider credentials
*aws-credentials*
*gcp-credentials*
*azure-credentials*
.aws/credentials
.azure/credentials
service-account*.json
gcloud-service-key*.json

# Secret scanning tools
.secrets.baseline
.gitleaks.toml
.detect-secrets-baseline

# Console logs and debug output (may contain secrets)
docs/maintenance/*.txt
docs/maintenance/*.log
*console*.txt
*console*.log
*debug*.txt
*debug*.log

# Backup files that might contain secrets
*.backup
*.bak
*.old
*_backup
*_bak
